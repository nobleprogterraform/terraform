- containers are meant to be transient in nature, which means they are meant to last
only for a short period of time. They're called upon when required to process data and destroyed once finished
The same is true for the data within the container. The data is destroyed, along with the container.

- To persist data processed by the containers, we attach a volume to the containers when they are created.
The data processed by the container is now placed
in this volume, thereby retaining it permanently.Even if the container is deleted,
the data generated or processed by it remains


apiVersion: v1
kind: Pod
metadata:
  name: random-number-generator
  labels:
    app: blue
  
spec:
  containers:
  - name: alpine
    image: alpine
    command: ["/bin/sh","-c"]
    args: ["shuf -i 0-100 -n 1 >> /opt/number.out;"]
    volumeMounts:
    - mountPath: /opt
      name: data-volume

  volumes:
  - name: data-volume
    hostPath: 
      path: /opt
      type: Directory


- When you create a volume, you can choose to configure its storage in different ways
- look at the volume storage options. We just used the host path option to configure it directly 
on the host as storage space for the volume. Now that works fine on a single node, however, it is not recommended for use
in a multi node cluster
Kubernetes supports several types of different storage solutions,such as NFS, cluster affairs,
Flocker or public cloud solutions like AWS, EBS,Azure desk or file,
      

