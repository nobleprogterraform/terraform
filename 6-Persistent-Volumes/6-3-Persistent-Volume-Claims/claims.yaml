Persistent Volumes and Persistent Volume Claims
are two separate objects in the Kubernetes name space.
An administrator creates a set of persistent volumes, and a user creates persistent volume claims
to use the storage.
Once the persistent volume claims are created, Kubernetes binds the persistent volumes to claims based
on the request and properties set on the volume.

During the binding process, Kubernetes tries to find a Persistent Volume that has sufficient capacity,
as requested by the claim

Using PVCs in PODs: under the volumes: sepcify persistentVolumeClaim: claimName: pv-claim

Note that a smaller claim may get bound to a larger volume if all the other criteria matches,
and there are no better options.There is a one to one relationship between claims
and volumes, so no other claims can utilize the remaining capacity in the volume

persistentVolumeRclaimPolicy: Retain | Delete | Retain
what happens to the underlying persistent volume when the claim is deleted?
You can choose what is to happen to the volume. By default, it is set to retain. Meaning the persistent volume will remain
until it is manually deleted by the administrator. It is not available for reuse by any other claims.
Delete means it will be deleted automatically, Recycle means data in volume will be deleted before it can be made 
available for claims again

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: myclaim
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
   requests:
     storage: 50Mi
